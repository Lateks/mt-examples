Classfile /Users/tuuli/school/thesis_examples/ex1_factorial/temp$_39916801/Factorial.class
  Last modified Feb 17, 2016; size 968 bytes
  MD5 checksum 9a09c84aefa80e62708567e2e90f2437
  Compiled from "Factorial.java"
class Factorial
  minor version: 0
  major version: 52
  flags: ACC_SUPER
Constant pool:
   #1 = Methodref          #14.#28        // java/lang/Object."<init>":()V
   #2 = Fieldref           #29.#30        // java/math/BigInteger.ZERO:Ljava/math/BigInteger;
   #3 = Methodref          #29.#31        // java/math/BigInteger.equals:(Ljava/lang/Object;)Z
   #4 = Fieldref           #29.#32        // java/math/BigInteger.ONE:Ljava/math/BigInteger;
   #5 = Methodref          #29.#33        // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #6 = Methodref          #29.#34        // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #7 = Methodref          #13.#35        // Factorial.factHelper:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #8 = Methodref          #29.#36        // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
   #9 = Fieldref           #37.#38        // java/lang/System.out:Ljava/io/PrintStream;
  #10 = Integer            100000
  #11 = Methodref          #13.#39        // Factorial.fact:(I)Ljava/math/BigInteger;
  #12 = Methodref          #40.#41        // java/io/PrintStream.println:(Ljava/lang/Object;)V
  #13 = Class              #42            // Factorial
  #14 = Class              #43            // java/lang/Object
  #15 = Utf8               <init>
  #16 = Utf8               ()V
  #17 = Utf8               Code
  #18 = Utf8               LineNumberTable
  #19 = Utf8               factHelper
  #20 = Utf8               (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #21 = Utf8               StackMapTable
  #22 = Utf8               fact
  #23 = Utf8               (I)Ljava/math/BigInteger;
  #24 = Utf8               main
  #25 = Utf8               ([Ljava/lang/String;)V
  #26 = Utf8               SourceFile
  #27 = Utf8               Factorial.java
  #28 = NameAndType        #15:#16        // "<init>":()V
  #29 = Class              #44            // java/math/BigInteger
  #30 = NameAndType        #45:#46        // ZERO:Ljava/math/BigInteger;
  #31 = NameAndType        #47:#48        // equals:(Ljava/lang/Object;)Z
  #32 = NameAndType        #49:#46        // ONE:Ljava/math/BigInteger;
  #33 = NameAndType        #50:#51        // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #34 = NameAndType        #52:#51        // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #35 = NameAndType        #19:#20        // factHelper:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #36 = NameAndType        #53:#54        // valueOf:(J)Ljava/math/BigInteger;
  #37 = Class              #55            // java/lang/System
  #38 = NameAndType        #56:#57        // out:Ljava/io/PrintStream;
  #39 = NameAndType        #22:#23        // fact:(I)Ljava/math/BigInteger;
  #40 = Class              #58            // java/io/PrintStream
  #41 = NameAndType        #59:#60        // println:(Ljava/lang/Object;)V
  #42 = Utf8               Factorial
  #43 = Utf8               java/lang/Object
  #44 = Utf8               java/math/BigInteger
  #45 = Utf8               ZERO
  #46 = Utf8               Ljava/math/BigInteger;
  #47 = Utf8               equals
  #48 = Utf8               (Ljava/lang/Object;)Z
  #49 = Utf8               ONE
  #50 = Utf8               subtract
  #51 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #52 = Utf8               multiply
  #53 = Utf8               valueOf
  #54 = Utf8               (J)Ljava/math/BigInteger;
  #55 = Utf8               java/lang/System
  #56 = Utf8               out
  #57 = Utf8               Ljava/io/PrintStream;
  #58 = Utf8               java/io/PrintStream
  #59 = Utf8               println
  #60 = Utf8               (Ljava/lang/Object;)V
{
  Factorial();
    descriptor: ()V
    flags:
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 5: 0

  public static java.math.BigInteger factHelper(java.math.BigInteger, java.math.BigInteger);
    descriptor: (Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #2                  // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
         4: invokevirtual #3                  // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
         7: ifeq          12
        10: aload_1
        11: areturn
        12: aload_0
        13: getstatic     #4                  // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
        16: invokevirtual #5                  // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
        19: aload_1
        20: aload_0
        21: invokevirtual #6                  // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
        24: invokestatic  #7                  // Method factHelper:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
        27: areturn
      LineNumberTable:
        line 7: 0
        line 8: 10
        line 10: 12
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */

  public static java.math.BigInteger fact(int);
    descriptor: (I)Ljava/math/BigInteger;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: i2l
         2: invokestatic  #8                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
         5: getstatic     #4                  // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
         8: invokestatic  #7                  // Method factHelper:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
        11: areturn
      LineNumberTable:
        line 14: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc           #10                 // int 100000
         5: invokestatic  #11                 // Method fact:(I)Ljava/math/BigInteger;
         8: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
        11: return
      LineNumberTable:
        line 19: 0
        line 20: 11
}
SourceFile: "Factorial.java"
