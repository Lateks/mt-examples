Classfile /Users/tuuli/school/thesis_examples/ex1_factorial/temp$_39916801/factorial_norecur$_main.class
  Last modified Feb 17, 2016; size 1109 bytes
  MD5 checksum 75d955471073d7ccc6487cd3936e012e
  Compiled from "factorial_norecur.clj"
public final class factorial_norecur$_main extends clojure.lang.AFunction
  minor version: 0
  major version: 49
  flags: ACC_PUBLIC, ACC_FINAL, ACC_SUPER
Constant pool:
   #1 = Utf8               factorial_norecur$_main
   #2 = Class              #1             // factorial_norecur$_main
   #3 = Utf8               clojure/lang/AFunction
   #4 = Class              #3             // clojure/lang/AFunction
   #5 = Utf8               factorial_norecur.clj
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = NameAndType        #6:#7          // "<init>":()V
   #9 = Methodref          #4.#8          // clojure/lang/AFunction."<init>":()V
  #10 = Utf8               invokeStatic
  #11 = Utf8               ()Ljava/lang/Object;
  #12 = Utf8               const__0
  #13 = Utf8               Lclojure/lang/Var;
  #14 = NameAndType        #12:#13        // const__0:Lclojure/lang/Var;
  #15 = Fieldref           #2.#14         // factorial_norecur$_main.const__0:Lclojure/lang/Var;
  #16 = Utf8               clojure/lang/Var
  #17 = Class              #16            // clojure/lang/Var
  #18 = Utf8               getRawRoot
  #19 = NameAndType        #18:#11        // getRawRoot:()Ljava/lang/Object;
  #20 = Methodref          #17.#19        // clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
  #21 = Utf8               clojure/lang/IFn
  #22 = Class              #21            // clojure/lang/IFn
  #23 = Utf8               const__1
  #24 = NameAndType        #23:#13        // const__1:Lclojure/lang/Var;
  #25 = Fieldref           #2.#24         // factorial_norecur$_main.const__1:Lclojure/lang/Var;
  #26 = Utf8               const__2
  #27 = Utf8               Ljava/lang/Object;
  #28 = NameAndType        #26:#27        // const__2:Ljava/lang/Object;
  #29 = Fieldref           #2.#28         // factorial_norecur$_main.const__2:Ljava/lang/Object;
  #30 = Utf8               invoke
  #31 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #32 = NameAndType        #30:#31        // invoke:(Ljava/lang/Object;)Ljava/lang/Object;
  #33 = InterfaceMethodref #22.#32        // clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
  #34 = NameAndType        #10:#11        // invokeStatic:()Ljava/lang/Object;
  #35 = Methodref          #2.#34         // factorial_norecur$_main.invokeStatic:()Ljava/lang/Object;
  #36 = Utf8               <clinit>
  #37 = Utf8               clojure.core
  #38 = String             #37            // clojure.core
  #39 = Utf8               println
  #40 = String             #39            // println
  #41 = Utf8               clojure/lang/RT
  #42 = Class              #41            // clojure/lang/RT
  #43 = Utf8               var
  #44 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
  #45 = NameAndType        #43:#44        // var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
  #46 = Methodref          #42.#45        // clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
  #47 = Utf8               factorial_norecur
  #48 = String             #47            // factorial_norecur
  #49 = Utf8               fact
  #50 = String             #49            // fact
  #51 = Long               10000l
  #53 = Utf8               java/lang/Long
  #54 = Class              #53            // java/lang/Long
  #55 = Utf8               valueOf
  #56 = Utf8               (J)Ljava/lang/Long;
  #57 = NameAndType        #55:#56        // valueOf:(J)Ljava/lang/Long;
  #58 = Methodref          #54.#57        // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #59 = Utf8               Code
  #60 = Utf8               LineNumberTable
  #61 = Utf8               SourceFile
  #62 = Utf8               SourceDebugExtension
{
  public static final clojure.lang.Var const__0;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final clojure.lang.Var const__1;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Object const__2;
    descriptor: Ljava/lang/Object;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public factorial_norecur$_main();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #9                  // Method clojure/lang/AFunction."<init>":()V
         4: return
      LineNumberTable:
        line 15: 0

  public static java.lang.Object invokeStatic();
    descriptor: ()Ljava/lang/Object;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: getstatic     #15                 // Field const__0:Lclojure/lang/Var;
         3: invokevirtual #20                 // Method clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
         6: checkcast     #22                 // class clojure/lang/IFn
         9: getstatic     #25                 // Field const__1:Lclojure/lang/Var;
        12: invokevirtual #20                 // Method clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
        15: checkcast     #22                 // class clojure/lang/IFn
        18: getstatic     #29                 // Field const__2:Ljava/lang/Object;
        21: invokeinterface #33,  2           // InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
        26: invokeinterface #33,  2           // InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
        31: areturn
      LineNumberTable:
        line 15: 0
        line 16: 6
        line 16: 15
        line 16: 21
        line 16: 26

  public java.lang.Object invoke();
    descriptor: ()Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: invokestatic  #35                 // Method invokeStatic:()Ljava/lang/Object;
         3: areturn
      LineNumberTable:
        line 15: 0

  public static {};
    descriptor: ()V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: ldc           #38                 // String clojure.core
         2: ldc           #40                 // String println
         4: invokestatic  #46                 // Method clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
         7: checkcast     #17                 // class clojure/lang/Var
        10: putstatic     #15                 // Field const__0:Lclojure/lang/Var;
        13: ldc           #48                 // String factorial_norecur
        15: ldc           #50                 // String fact
        17: invokestatic  #46                 // Method clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
        20: checkcast     #17                 // class clojure/lang/Var
        23: putstatic     #25                 // Field const__1:Lclojure/lang/Var;
        26: ldc2_w        #51                 // long 10000l
        29: invokestatic  #58                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        32: putstatic     #29                 // Field const__2:Ljava/lang/Object;
        35: return
      LineNumberTable:
        line 15: 0
}
SourceFile: "factorial_norecur.clj"
SourceDebugExtension:
  SMAP
  factorial_norecur.java
  Clojure
  *S Clojure
  *F
  + 1 factorial_norecur.clj
  factorial_norecur.clj
  *L
  13#1,4:13
  *E
