.assembly extern mscorlib
{
  .ver 4:0:0:0
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 ) // .z\V.4..
}
.assembly extern FSharp.Core
{
  .ver 4:4:0:0
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A ) // .?_....:
}
.assembly 'SimpleClosure'
{
  .custom instance void class [FSharp.Core]Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute::'.ctor'(int32, int32, int32) =  (
		01 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 ) // ................

  .hash algorithm 0x00008004
  .ver  0:0:0:0
}
.mresource public 'FSharpSignatureData.SimpleClosure'
{
}
.mresource public 'FSharpOptimizationData.SimpleClosure'
{
}
.module SimpleClosure.exe // GUID = {56C5EA53-0175-6E5C-A745-038353EAC556}


  .class public auto ansi abstract sealed SimpleClosure
  	extends [mscorlib]System.Object
  {
    .custom instance void class [FSharp.Core]Microsoft.FSharp.Core.CompilationMappingAttribute::'.ctor'(valuetype [FSharp.Core]Microsoft.FSharp.Core.SourceConstructFlags) =  (01 00 07 00 00 00 00 00 ) // ........


    // method line 1
    .method public static 
           default class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, int32> 'add' (int32 x)  cil managed 
    {
        // Method begins at RVA 0x2050
	// Code size 33 (0x21)
	.maxstack 4
	.locals init (
		class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>	V_0,
		int32	V_1)
	IL_0000:  ldstr "Creating closure add(%d)"
	IL_0005:  newobj instance void class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`5<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>, class [mscorlib]System.IO.TextWriter, class [FSharp.Core]Microsoft.FSharp.Core.Unit, class [FSharp.Core]Microsoft.FSharp.Core.Unit, int32>::'.ctor'(string)
	IL_000a:  call !!0 class [FSharp.Core]Microsoft.FSharp.Core.ExtraTopLevelOperators::PrintFormatLine<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32,class [FSharp.Core]Microsoft.FSharp.Core.Unit>> (class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`4<!!0,class [mscorlib]System.IO.TextWriter,class [FSharp.Core]Microsoft.FSharp.Core.Unit,class [FSharp.Core]Microsoft.FSharp.Core.Unit>)
	IL_000f:  stloc.0 
	IL_0010:  ldarg.0 
	IL_0011:  stloc.1 
	IL_0012:  ldloc.0 
	IL_0013:  ldloc.1 
	IL_0014:  callvirt instance !1 class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>::Invoke(!0)
	IL_0019:  pop 
	IL_001a:  ldarg.0 
	IL_001b:  newobj instance void class SimpleClosure/add@3::'.ctor'(int32)
	IL_0020:  ret 
    } // end of method SimpleClosure::add

    // method line 2
    .method public static 
           default int32 main (string[] argv)  cil managed 
    {
        .custom instance void class [FSharp.Core]Microsoft.FSharp.Core.EntryPointAttribute::'.ctor'() =  (01 00 00 00 ) // ....

        // Method begins at RVA 0x2080
	.entrypoint
	// Code size 122 (0x7a)
	.maxstack 4
	.locals init (
		class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>	V_0,
		int32	V_1,
		class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, int32>	V_2,
		class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>	V_3,
		int32	V_4,
		class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>	V_5,
		int32	V_6)
	IL_0000:  ldstr "%d"
	IL_0005:  newobj instance void class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`5<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>, class [mscorlib]System.IO.TextWriter, class [FSharp.Core]Microsoft.FSharp.Core.Unit, class [FSharp.Core]Microsoft.FSharp.Core.Unit, int32>::'.ctor'(string)
	IL_000a:  call !!0 class [FSharp.Core]Microsoft.FSharp.Core.ExtraTopLevelOperators::PrintFormatLine<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32,class [FSharp.Core]Microsoft.FSharp.Core.Unit>> (class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`4<!!0,class [mscorlib]System.IO.TextWriter,class [FSharp.Core]Microsoft.FSharp.Core.Unit,class [FSharp.Core]Microsoft.FSharp.Core.Unit>)
	IL_000f:  stloc.0 
	IL_0010:  ldc.i4.5 
	IL_0011:  call class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32,int32> class SimpleClosure::'add'(int32)
	IL_0016:  ldc.i4.4 
	IL_0017:  callvirt instance !1 class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, int32>::Invoke(!0)
	IL_001c:  stloc.1 
	IL_001d:  ldloc.0 
	IL_001e:  ldloc.1 
	IL_001f:  callvirt instance !1 class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>::Invoke(!0)
	IL_0024:  pop 
	IL_0025:  ldc.i4.s 0x0a
	IL_0027:  call class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32,int32> class SimpleClosure::'add'(int32)
	IL_002c:  stloc.2 
	IL_002d:  ldstr "%d"
	IL_0032:  newobj instance void class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`5<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>, class [mscorlib]System.IO.TextWriter, class [FSharp.Core]Microsoft.FSharp.Core.Unit, class [FSharp.Core]Microsoft.FSharp.Core.Unit, int32>::'.ctor'(string)
	IL_0037:  call !!0 class [FSharp.Core]Microsoft.FSharp.Core.ExtraTopLevelOperators::PrintFormatLine<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32,class [FSharp.Core]Microsoft.FSharp.Core.Unit>> (class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`4<!!0,class [mscorlib]System.IO.TextWriter,class [FSharp.Core]Microsoft.FSharp.Core.Unit,class [FSharp.Core]Microsoft.FSharp.Core.Unit>)
	IL_003c:  stloc.3 
	IL_003d:  ldloc.2 
	IL_003e:  ldc.i4.s 0x5a
	IL_0040:  callvirt instance !1 class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, int32>::Invoke(!0)
	IL_0045:  stloc.s 4
	IL_0047:  ldloc.3 
	IL_0048:  ldloc.s 4
	IL_004a:  callvirt instance !1 class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>::Invoke(!0)
	IL_004f:  pop 
	IL_0050:  ldstr "%d"
	IL_0055:  newobj instance void class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`5<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>, class [mscorlib]System.IO.TextWriter, class [FSharp.Core]Microsoft.FSharp.Core.Unit, class [FSharp.Core]Microsoft.FSharp.Core.Unit, int32>::'.ctor'(string)
	IL_005a:  call !!0 class [FSharp.Core]Microsoft.FSharp.Core.ExtraTopLevelOperators::PrintFormatLine<class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32,class [FSharp.Core]Microsoft.FSharp.Core.Unit>> (class [FSharp.Core]Microsoft.FSharp.Core.PrintfFormat`4<!!0,class [mscorlib]System.IO.TextWriter,class [FSharp.Core]Microsoft.FSharp.Core.Unit,class [FSharp.Core]Microsoft.FSharp.Core.Unit>)
	IL_005f:  stloc.s 5
    // add10(999)
	IL_0061:  ldloc.2 
	IL_0062:  ldc.i4 999
	IL_0067:  callvirt instance !1 class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, int32>::Invoke(!0)
	IL_006c:  stloc.s 6
	IL_006e:  ldloc.s 5
	IL_0070:  ldloc.s 6
	IL_0072:  callvirt instance !1 class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, class [FSharp.Core]Microsoft.FSharp.Core.Unit>::Invoke(!0)
	IL_0077:  pop 
	IL_0078:  ldc.i4.0 
	IL_0079:  ret 
    } // end of method SimpleClosure::main

  .class nested assembly auto ansi serializable beforefieldinit add@3
  	extends class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32,int32>
  {
    .field  public  int32 x

    // method line 3
    .method assembly specialname rtspecialname 
           instance default void '.ctor' (int32 x)  cil managed 
    {
        // Method begins at RVA 0x2108
	// Code size 14 (0xe)
	.maxstack 8
	IL_0000:  ldarg.0 
	IL_0001:  call instance void class [FSharp.Core]Microsoft.FSharp.Core.FSharpFunc`2<int32, int32>::'.ctor'()
	IL_0006:  ldarg.0 
	IL_0007:  ldarg.1 
	IL_0008:  stfld int32 SimpleClosure/add@3::x
	IL_000d:  ret 
    } // end of method add@3::.ctor

    // method line 4
    .method public virtual strict 
           instance default int32 Invoke (int32 y)  cil managed 
    {
        // Method begins at RVA 0x2118
	// Code size 9 (0x9)
	.maxstack 8
	IL_0000:  ldarg.0 
	IL_0001:  ldfld int32 SimpleClosure/add@3::x
	IL_0006:  ldarg.1 
	IL_0007:  add 
	IL_0008:  ret 
    } // end of method add@3::Invoke

  } // end of class add@3

  } // end of class SimpleClosure

.namespace '<StartupCode$SimpleClosure>'
{
  .class private auto ansi abstract sealed $SimpleClosure
  	extends [mscorlib]System.Object
  {

  } // end of class <StartupCode$SimpleClosure>.$SimpleClosure
}

