Classfile /Users/tuuli/school/thesis_examples_clean/ex2_add2/NestedClosure.class
  Last modified Aug 1, 2016; size 1735 bytes
  MD5 checksum 00b779699f03d76af34f56dbbb5b453a
public class NestedClosure
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC
Constant pool:
   #1 = Utf8               NestedClosure
   #2 = Class              #1             // NestedClosure
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Add$1
   #6 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #7 = Utf8               Lambda$2
   #8 = Utf8               (Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
   #9 = Utf8               Lambda$1
  #10 = Utf8               (Llib/CTReferenceCell;Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
  #11 = Integer            3
  #12 = Integer            0
  #13 = Utf8               lib/CTReferenceCell
  #14 = Class              #13            // lib/CTReferenceCell
  #15 = Utf8               get
  #16 = Utf8               ()Ljava/lang/Object;
  #17 = NameAndType        #15:#16        // get:()Ljava/lang/Object;
  #18 = Methodref          #14.#17        // lib/CTReferenceCell.get:()Ljava/lang/Object;
  #19 = Integer            1
  #20 = Integer            2
  #21 = Utf8               lib/BuiltIns
  #22 = Class              #21            // lib/BuiltIns
  #23 = Utf8               plus
  #24 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #25 = NameAndType        #23:#24        // plus:([Ljava/lang/Object;)Ljava/lang/Object;
  #26 = Methodref          #22.#25        // lib/BuiltIns.plus:([Ljava/lang/Object;)Ljava/lang/Object;
  #27 = Utf8               <init>
  #28 = Utf8               (Ljava/lang/Object;)V
  #29 = NameAndType        #27:#28        // "<init>":(Ljava/lang/Object;)V
  #30 = Methodref          #14.#29        // lib/CTReferenceCell."<init>":(Ljava/lang/Object;)V
  #31 = Utf8               java/lang/invoke/LambdaMetafactory
  #32 = Class              #31            // java/lang/invoke/LambdaMetafactory
  #33 = Utf8               metafactory
  #34 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #35 = NameAndType        #33:#34        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #36 = Methodref          #32.#35        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #37 = MethodHandle       #6:#36         // invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #38 = MethodType         #6             //  (Ljava/lang/Object;)Ljava/lang/Object;
  #39 = NameAndType        #9:#10         // Lambda$1:(Llib/CTReferenceCell;Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
  #40 = Methodref          #2.#39         // NestedClosure.Lambda$1:(Llib/CTReferenceCell;Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
  #41 = MethodHandle       #6:#40         // invokestatic NestedClosure.Lambda$1:(Llib/CTReferenceCell;Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
  #42 = Utf8               apply
  #43 = Utf8               (Llib/CTReferenceCell;Llib/CTReferenceCell;)Llib/CTProcedure1;
  #44 = NameAndType        #42:#43        // apply:(Llib/CTReferenceCell;Llib/CTReferenceCell;)Llib/CTProcedure1;
  #45 = InvokeDynamic      #0:#44         // #0:apply:(Llib/CTReferenceCell;Llib/CTReferenceCell;)Llib/CTProcedure1;
  #46 = String             #9             // Lambda$1
  #47 = Utf8               lib/ProcedureHelpers
  #48 = Class              #47            // lib/ProcedureHelpers
  #49 = Utf8               match1
  #50 = Utf8               (Llib/CTProcedure1;Ljava/lang/String;)Llib/CTProcedure;
  #51 = NameAndType        #49:#50        // match1:(Llib/CTProcedure1;Ljava/lang/String;)Llib/CTProcedure;
  #52 = Methodref          #48.#51        // lib/ProcedureHelpers.match1:(Llib/CTProcedure1;Ljava/lang/String;)Llib/CTProcedure;
  #53 = NameAndType        #7:#8          // Lambda$2:(Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
  #54 = Methodref          #2.#53         // NestedClosure.Lambda$2:(Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
  #55 = MethodHandle       #6:#54         // invokestatic NestedClosure.Lambda$2:(Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
  #56 = Utf8               (Llib/CTReferenceCell;)Llib/CTProcedure1;
  #57 = NameAndType        #42:#56        // apply:(Llib/CTReferenceCell;)Llib/CTProcedure1;
  #58 = InvokeDynamic      #1:#57         // #1:apply:(Llib/CTReferenceCell;)Llib/CTProcedure1;
  #59 = String             #7             // Lambda$2
  #60 = Utf8               main
  #61 = Utf8               ([Ljava/lang/String;)V
  #62 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #63 = Class              #62            // java/lang/invoke/MethodHandles$Lookup
  #64 = Utf8               java/lang/invoke/MethodHandles
  #65 = Class              #64            // java/lang/invoke/MethodHandles
  #66 = Utf8               Lookup
  #67 = Utf8               lib/CTNumber
  #68 = Class              #67            // lib/CTNumber
  #69 = Double             5.0d
  #71 = Utf8               (D)V
  #72 = NameAndType        #27:#71        // "<init>":(D)V
  #73 = Methodref          #68.#72        // lib/CTNumber."<init>":(D)V
  #74 = NameAndType        #5:#6          // Add$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #75 = Methodref          #2.#74         // NestedClosure.Add$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #76 = Utf8               trampoline
  #77 = NameAndType        #76:#6         // trampoline:(Ljava/lang/Object;)Ljava/lang/Object;
  #78 = Methodref          #48.#77        // lib/ProcedureHelpers.trampoline:(Ljava/lang/Object;)Ljava/lang/Object;
  #79 = Double             4.0d
  #81 = Utf8               callProcedure
  #82 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #83 = NameAndType        #81:#82        // callProcedure:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #84 = Methodref          #48.#83        // lib/ProcedureHelpers.callProcedure:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #85 = Double             3.0d
  #87 = Utf8               display
  #88 = NameAndType        #87:#6         // display:(Ljava/lang/Object;)Ljava/lang/Object;
  #89 = Methodref          #22.#88        // lib/BuiltIns.display:(Ljava/lang/Object;)Ljava/lang/Object;
  #90 = Utf8               <clinit>
  #91 = Utf8               ()V
  #92 = Utf8               Code
  #93 = Utf8               BootstrapMethods
  #94 = Utf8               InnerClasses
{
  private static java.lang.Object Add$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PRIVATE, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #14                 // class lib/CTReferenceCell
         3: dup
         4: aload_0
         5: invokespecial #30                 // Method lib/CTReferenceCell."<init>":(Ljava/lang/Object;)V
         8: astore_0
         9: aload_0
        10: invokedynamic #58,  0             // InvokeDynamic #1:apply:(Llib/CTReferenceCell;)Llib/CTProcedure1;
        15: ldc           #59                 // String Lambda$2
        17: invokestatic  #52                 // Method lib/ProcedureHelpers.match1:(Llib/CTProcedure1;Ljava/lang/String;)Llib/CTProcedure;
        20: areturn

  private static java.lang.Object Lambda$2(lib.CTReferenceCell, java.lang.Object);
    descriptor: (Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PRIVATE, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #14                 // class lib/CTReferenceCell
         3: dup
         4: aload_1
         5: invokespecial #30                 // Method lib/CTReferenceCell."<init>":(Ljava/lang/Object;)V
         8: astore_1
         9: aload_0
        10: aload_1
        11: invokedynamic #45,  0             // InvokeDynamic #0:apply:(Llib/CTReferenceCell;Llib/CTReferenceCell;)Llib/CTProcedure1;
        16: ldc           #46                 // String Lambda$1
        18: invokestatic  #52                 // Method lib/ProcedureHelpers.match1:(Llib/CTProcedure1;Ljava/lang/String;)Llib/CTProcedure;
        21: areturn

  private static java.lang.Object Lambda$1(lib.CTReferenceCell, lib.CTReferenceCell, java.lang.Object);
    descriptor: (Llib/CTReferenceCell;Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: ldc           #11                 // int 3
         2: anewarray     #4                  // class java/lang/Object
         5: dup
         6: ldc           #12                 // int 0
         8: aload_0
         9: invokevirtual #18                 // Method lib/CTReferenceCell.get:()Ljava/lang/Object;
        12: aastore
        13: dup
        14: ldc           #19                 // int 1
        16: aload_1
        17: invokevirtual #18                 // Method lib/CTReferenceCell.get:()Ljava/lang/Object;
        20: aastore
        21: dup
        22: ldc           #20                 // int 2
        24: aload_2
        25: aastore
        26: invokestatic  #26                 // Method lib/BuiltIns.plus:([Ljava/lang/Object;)Ljava/lang/Object;
        29: areturn

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=1, args_size=1
         0: new           #68                 // class lib/CTNumber
         3: dup
         4: ldc2_w        #69                 // double 5.0d
         7: invokespecial #73                 // Method lib/CTNumber."<init>":(D)V
        10: invokestatic  #75                 // Method Add$1:(Ljava/lang/Object;)Ljava/lang/Object;
        13: invokestatic  #78                 // Method lib/ProcedureHelpers.trampoline:(Ljava/lang/Object;)Ljava/lang/Object;
        16: ldc           #19                 // int 1
        18: anewarray     #4                  // class java/lang/Object
        21: dup
        22: ldc           #12                 // int 0
        24: new           #68                 // class lib/CTNumber
        27: dup
        28: ldc2_w        #79                 // double 4.0d
        31: invokespecial #73                 // Method lib/CTNumber."<init>":(D)V
        34: aastore
        35: invokestatic  #84                 // Method lib/ProcedureHelpers.callProcedure:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        38: invokestatic  #78                 // Method lib/ProcedureHelpers.trampoline:(Ljava/lang/Object;)Ljava/lang/Object;
        41: ldc           #19                 // int 1
        43: anewarray     #4                  // class java/lang/Object
        46: dup
        47: ldc           #12                 // int 0
        49: new           #68                 // class lib/CTNumber
        52: dup
        53: ldc2_w        #85                 // double 3.0d
        56: invokespecial #73                 // Method lib/CTNumber."<init>":(D)V
        59: aastore
        60: invokestatic  #84                 // Method lib/ProcedureHelpers.callProcedure:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        63: invokestatic  #78                 // Method lib/ProcedureHelpers.trampoline:(Ljava/lang/Object;)Ljava/lang/Object;
        66: invokestatic  #89                 // Method lib/BuiltIns.display:(Ljava/lang/Object;)Ljava/lang/Object;
        69: pop
        70: return

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=0, locals=0, args_size=0
         0: return
}
BootstrapMethods:
  0: #37 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #41 invokestatic NestedClosure.Lambda$1:(Llib/CTReferenceCell;Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
  1: #37 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #55 invokestatic NestedClosure.Lambda$2:(Llib/CTReferenceCell;Ljava/lang/Object;)Ljava/lang/Object;
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
InnerClasses:
     public static final #66= #63 of #65; //Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
