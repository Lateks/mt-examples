Classfile /Users/tuuli/school/thesis_examples/ex3_mutual_recursion/temp$_39916801/mutual_recursion_trampolines$is_odd_fn.class
  Last modified Feb 29, 2016; size 939 bytes
  MD5 checksum f24d03a13bce0cc824f50863039f30e1
  Compiled from "mutual_recursion_trampolines.clj"
public final class mutual_recursion_trampolines$is_odd_fn extends clojure.lang.AFunction
  minor version: 0
  major version: 49
  flags: ACC_PUBLIC, ACC_FINAL, ACC_SUPER
Constant pool:
   #1 = Utf8               mutual_recursion_trampolines$is_odd_fn
   #2 = Class              #1             // mutual_recursion_trampolines$is_odd_fn
   #3 = Utf8               clojure/lang/AFunction
   #4 = Class              #3             // clojure/lang/AFunction
   #5 = Utf8               mutual_recursion_trampolines.clj
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = NameAndType        #6:#7          // "<init>":()V
   #9 = Methodref          #4.#8          // clojure/lang/AFunction."<init>":()V
  #10 = Utf8               invokeStatic
  #11 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #12 = Utf8               clojure/lang/Numbers
  #13 = Class              #12            // clojure/lang/Numbers
  #14 = Utf8               isZero
  #15 = Utf8               (Ljava/lang/Object;)Z
  #16 = NameAndType        #14:#15        // isZero:(Ljava/lang/Object;)Z
  #17 = Methodref          #13.#16        // clojure/lang/Numbers.isZero:(Ljava/lang/Object;)Z
  #18 = Utf8               java/lang/Boolean
  #19 = Class              #18            // java/lang/Boolean
  #20 = Utf8               FALSE
  #21 = Utf8               Ljava/lang/Boolean;
  #22 = NameAndType        #20:#21        // FALSE:Ljava/lang/Boolean;
  #23 = Fieldref           #19.#22        // java/lang/Boolean.FALSE:Ljava/lang/Boolean;
  #24 = Utf8               mutual_recursion_trampolines$is_odd_fn$fn__9
  #25 = Class              #24            // mutual_recursion_trampolines$is_odd_fn$fn__9
  #26 = Utf8               (Ljava/lang/Object;)V
  #27 = NameAndType        #6:#26         // "<init>":(Ljava/lang/Object;)V
  #28 = Methodref          #25.#27        // mutual_recursion_trampolines$is_odd_fn$fn__9."<init>":(Ljava/lang/Object;)V
  #29 = Utf8               n
  #30 = Utf8               Ljava/lang/Object;
  #31 = Utf8               invoke
  #32 = NameAndType        #10:#11        // invokeStatic:(Ljava/lang/Object;)Ljava/lang/Object;
  #33 = Methodref          #2.#32         // mutual_recursion_trampolines$is_odd_fn.invokeStatic:(Ljava/lang/Object;)Ljava/lang/Object;
  #34 = Utf8               <clinit>
  #35 = Utf8               Code
  #36 = Utf8               LineNumberTable
  #37 = Utf8               LocalVariableTable
  #38 = Utf8               SourceFile
  #39 = Utf8               SourceDebugExtension
{
  public mutual_recursion_trampolines$is_odd_fn();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #9                  // Method clojure/lang/AFunction."<init>":()V
         4: return
      LineNumberTable:
        line 8: 0

  public static java.lang.Object invokeStatic(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #17                 // Method clojure/lang/Numbers.isZero:(Ljava/lang/Object;)Z
         4: ifeq          14
         7: getstatic     #23                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
        10: goto          24
        13: pop
        14: new           #25                 // class mutual_recursion_trampolines$is_odd_fn$fn__9
        17: dup
        18: aload_0
        19: aconst_null
        20: astore_0
        21: invokespecial #28                 // Method mutual_recursion_trampolines$is_odd_fn$fn__9."<init>":(Ljava/lang/Object;)V
        24: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0     n   Ljava/lang/Object;
      LineNumberTable:
        line 8: 0
        line 10: 0
        line 10: 1

  public java.lang.Object invoke(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aconst_null
         2: astore_1
         3: invokestatic  #33                 // Method invokeStatic:(Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 8: 3

  public static {};
    descriptor: ()V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=0, args_size=0
         0: return
      LineNumberTable:
        line 8: 0
}
SourceFile: "mutual_recursion_trampolines.clj"
SourceDebugExtension:
  SMAP
  mutual_recursion_trampolines.java
  Clojure
  *S Clojure
  *F
  + 1 mutual_recursion_trampolines.clj
  mutual_recursion_trampolines.clj
  *L
  5#1,8:5
  *E
